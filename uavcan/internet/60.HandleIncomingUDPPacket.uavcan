#
# This message carries UDP packets sent from a remote host on the Internet or a LAN to a node on the
# local UAVCAN bus. Please refer to the defintion of the message type OutgoingUDPPacket for a
# general overview of the packet forwarding logic.
#
# This data type has been made a service type rather than a message type in order to make the transfers
# addressable, allowing the nodes to employ hardware CAN acceptance filters for filtering out
# forwarded datagrams that are not addressed to them. Additionally, requiring the destination
# nodes to always respond upon reception of the forwarded datagram opens interesting opportunities
# for future extensions of the forwarding protocol.
#
# It should be noted that this data type definition intentionally lefts out the source address.
# This is done in order to simplify the implementation, reduce the traffic overhead, and because
# the nature of the communication patterns proposed by this set of messages does not provide a
# valid way to implement servers on the local UAVCAN bus. It is assumed that the local nodes
# can be only clients, and therefore, they will be able to determine the address of the sender
# simply by mapping the field session_id to their internal data structures. Furthermore, there is
# a certain ambiguity as to how to represent the source address for the client nodes: it is assumed
# that the local nodes will mostly use DNS names rather than IP addresses, so if there was a source
# address field, modem nodes would have to perform reverse mapping from IP address they received
# the datagram from to the corresponding DNS name that was used by the local node with the outgoing
# message. This approach creates a number of concerning corner cases and adds a fair amount of
# hidden complexities to implementation of modem nodes.
#

#
# This field must contain the same value that was used by the local node when sending the
# corresponding outgoing packet using the message type OutgoingUDPPacket.
# This value will be used by the local node to match the response with its local context.
#
uint16 session_id

#
# Effective payload. This data will be forwarded from the remote host verbatim.
# Note that tail array optimization is active here.
#
uint8[<=1024] payload

---

#
# Reserved for future use.
#
void56
